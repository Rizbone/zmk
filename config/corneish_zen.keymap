

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>



// Mac

#define mCHAR 0
#define mNR 1

#define mLCHAR 2
#define mNRhard 3

#define mNAV 4
#define mNAV2 5

#define mPRG 6
#define mSPRG 7

#define mFUNC 8
#define mSFUNC 9

#define mSYM 10
#define mSSYM 11

#define mMOD 12	

#define mSCHAR 13


 
/ {
    chosen {
    	zmk,matrix_transform = &default_transform;
    };
};



/ {

    behaviors {

		// MAC

        mdNr: tap_dance_mdNr {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mdNr";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&to mNR>, <&to mNRhard>;
        };

        mdReset: tap_dance_mdReset {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mdReset";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&to mCHAR>, <&none>;
        };

		mdLs: tap_dance_mdLs {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mdLs";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl mSCHAR>, <&to mLCHAR>;
        };
		mdRs: tap_dance_mdRs {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mdRs";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl mSCHAR>, <&to mLCHAR>;
        };

    };

	
    macros {

		// MAC

        mSpaceReset: mSpaceReset {
            label = "mSpaceReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp SPACE>
                ;
    	};
		mEnterReset: mEnterReset {
            label = "mEnterReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&kp ENTER>
                ;
    	};
		mNavReset: mNavReset {
            label = "mNavReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &mo mNAV>
    			, <&macro_pause_for_release>
				, <&macro_release &mo mNAV>
                ;
    	};
		mPrgReset: mPrgReset {
            label = "mPrgReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &mo mPRG>
    			, <&macro_pause_for_release>
				, <&macro_release &mo mPRG>
                ;
    	};
		mFuncReset: mFuncReset {
            label = "mFuncReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to mCHAR>
                , <&macro_press &mo mFUNC>
    			, <&macro_pause_for_release>
				, <&macro_release &mo mFUNC>
                ;
    	};

		mFuncMarkLine: mFuncMarLine {
            label = "mFuncMarkLnie";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LG(RIGHT)>
				, <&kp LS(LG(LEFT))>
                ;
    	};

		mFuncMarkWord: mFuncMarkWord {
            label = "mFuncMarkWord";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LA(RIGHT)>
				, <&kp LS(LA(LEFT))>
                ;
    	};

	};





	keymap
	{	
		compatible = "zmk,keymap";


		// -----------------------------------------------------|
		// Layer 0 - mChar = 	  Buchstaben					|
		// -----------------------------------------------------|
	
		mac_buchstaben
		{
			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X

				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC

				// ----------------------------------------
	
				&mdReset
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O

				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET

				// ----------------------------------------
	
				&mdLs
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q

				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&mdRs

				// ----------------------------------------

				&sl mSYM
				&kp SPACE
				&sl mFUNC
				&sl mPRG
				&sl mNAV
				&mdNr

				// ----------------------------------------
			>;
		};



		// -----------------------------------------------------|
		// Layer 1 - mNR = 	  Zahlen 							|
		// -----------------------------------------------------|

		mac_zahlen
		{
			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp ESC	
				&kp LG(N1)
				&kp LG(N2)
				&kp LG(N3)	
				&kp LG(N4)
				&kp LG(N5)

				&kp LG(N6)
				&kp LG(N7)
				&kp LG(N8)
				&kp LG(N9)
				&kp LG(N0)
				&kp BACKSPACE

				// ----------------------------------------

				&mdReset
				&kp N1				
				&kp N2				
				&kp N3				
				&kp N4					
				&kp N5		

				&kp N6				
				&kp N7				
				&kp N8			
				&kp N9				
				&kp N0				
				&mEnterReset 

				// ----------------------------------------

				&mdLs
				&kp LS(N7)				// /
				&kp NUBS				// Spitze
				&kp LS(NUBS)			// Spitze
				&kp LS(RBKT)			// *
				&kp LS(SLASH)			// _

				&kp LS(N0)				// =
				&kp RBKT  				// +
				&kp COMMA				// ,
				&kp DOT					// .
				&kp SLASH 				// -
				&mdRs

				// ----------------------------------------
		
				&sl mSYM
				&mSpaceReset 
				&mFuncReset
				&mPrgReset
				&mNavReset
				&mdNr
			>;		
		};




		// -----------------------------------------------------|
		// Layer 2 - mLCHAR = 	  Buchstaben Lock				|
		// -----------------------------------------------------|
	
		mac_lchar
		{
			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp ESC
				&kp LS(J) 
				&kp LS(D)	 
				&kp LS(U)
				&kp LS(A)
				&kp LS(X)

				&kp LS(P)
				&kp LS(H)
				&kp LS(L)
				&kp LS(M)
				&kp LS(W)
				&kp LS(BSPC)

				// ----------------------------------------
	
				&mdReset
				&kp LS(C)
				&kp LS(T)
				&kp LS(I)
				&kp LS(E)
				&kp LS(O)
			
				&kp LS(B)
				&kp LS(N)
				&kp LS(R)
				&kp LS(S)
				&kp LS(G)
				&mEnterReset

				// ----------------------------------------

				&mdLs
				&kp LS(F)
				&kp LS(V)
				&kp LS(MINUS)
				&kp LS(Y)
				&kp LS(Q)

				&kp LS(Z)
				&kp LS(SEMI)
				&kp LS(LBKT)
				&kp LS(SQT)
				&kp LS(K)
				&mdRs						

				// ----------------------------------------

				&sl mSYM
				&mSpaceReset 
				&mFuncReset
				&mPrgReset
				&mNavReset
				&mdNr

				// ----------------------------------------
			>;
		};



		// -----------------------------------------------------|
		// Layer 3 - mNRhard = 	  Zahlen Hard Lock				|
		// -----------------------------------------------------|

		mac_zahlenhard
		{
			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp ESC	
				&trans
				&kp K
				&kp G
				&trans 
				&kp X

				&trans 
				&trans 
				&kp C
				&kp M
				&trans
				&kp BSPC

				// ----------------------------------------

				&mdReset
				&kp N1				
				&kp N2				
				&kp N3				
				&kp N4					
				&kp N5		

				&kp N6				
				&kp N7				
				&kp N8				
				&kp N9				
				&kp N0				
				&kp ENTER 

				// ----------------------------------------

				&mdLs
				&kp LS(N7)				// /
				&kp NUBS				// Spitze
				&kp LS(NUBS)			// Spitze
				&kp LS(RBKT)			// *
				&kp LS(SLASH)			// _

				&kp LS(N0)				// =
				&kp RBKT  				// +
				&kp COMMA				// ,
				&kp DOT					// .
				&kp SLASH 				// -
				&mdRs

				// ----------------------------------------
		
				&sl mSYM
				&kp SPACE
				&sl mFUNC
				&sl mPRG
				&sl mNAV
				&mdNr
			>;		
		};




		// -----------------------------------------------------|
		// Layer = 4 - mNAV - Navigation						|
		// -----------------------------------------------------|

		mac_navigation
		{		
			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp ESC						// -
				&kp LG(UP)					// @Home Sprung
				&kp LS(TAB)
				&kp UP						// @Up
				&kp TAB
				&mFuncMarkLine

				&kp LG(LC(LA(F1)))		 	// 
				&kp LG(LC(LA(F2)))		 	// 
				&kp PG_UP
				&kp LG(LC(LA(F4)))		 	// 
				&kp LGUI
				&kp BSPC					// -

				// ----------------------------------------

				&mdReset					// -
				&kp LG(DOWN)				// @End Sprung
				&kp LEFT 					// @Left
				&kp DOWN					// @Down
				&kp RIGHT 					// @Right
				&mFuncMarkWord

				&kp LG(LC(LA(F6)))		 	//
				&kp F13
				&kp PG_DN
				&kp F14
				&kp LG(LC(LA(F10)))		 	//
				&kp ENTER					// -
				
				// ----------------------------------------

				&kp DELETE		  			// @Delete
				&kp LG(LEFT)				// @Home 
				&kp LA(LEFT)				// @Wort Sprung
				&kp LA(RIGHT)				// @Wort Sprung
				&kp LG(RIGHT)				// @End  
				&kp LG(LC(LA(F18)))		 	// 

				&kp LG(LC(LA(F11)))		 	// 
				&kp F15
				&kp F16
				&kp F17
				&kp F18
				&kp LCTRL					// -

				// ----------------------------------------

				&sl mSYM
				&kp SPACE				
				&sl mFUNC
				&none
				&sl mNAV2					// deep
				&none

				// ----------------------------------------							
			>;
		};

		// ---------------------------------------------------------|
		// Layer = 5 - mNAV2 - Navigation deep						|
		// ---------------------------------------------------------|		

		mac_navigation2
		{		
			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp ESC	
				&kp LG(LS(UP))
				&kp LS(TAB)
				&kp LS(UP)					
				&kp TAB
				&kp LG(LA(LC(LS(F16))))		

				&kp LG(LA(LC(LS(F1))))
				&kp LG(LA(LC(LS(F2))))
				&kp LC(PG_UP)
				&kp LG(LA(LC(LS(F4))))
				&kp LG(LA(LC(LS(F5))))
				&kp BACKSPACE

				// ----------------------------------------

				&mdReset					
				&kp LG(LS(DOWN))				
				&kp LS(LEFT)		
				&kp LS(DOWN)		
				&kp LS(RIGHT)		
				&mFuncMark

				&kp LG(LA(LC(LS(F6))))
				&kp LS(F13)
				&kp LC(PG_DN)
				&kp LS(F14)
				&kp LG(LA(LC(LS(F10))))
				&kp ENTER

				// ----------------------------------------
	
				&kp DELETE
				&kp LG(LS(LEFT))			// @Home 
				&kp LA(LS(LEFT))			// @Wort Sprung
				&kp LA(LS(RIGHT))			// @Wort Sprung
				&kp LG(LS(RIGHT))			// @End  
				&kp LG(LA(LC(LS(F18))))

				&kp LG(LA(LC(LS(F11))))
				&kp LS(F15)
				&kp LS(F16)
				&kp LS(F17)
				&kp LS(F18)
				&kp LCTRL

				// ----------------------------------------

				&sl mSYM
				&kp SPACE				
				&sl mFUNC
				&none						// 
				&trans						// 
				&none						//

				// ----------------------------------------
			>;
		};




		// -----------------------------------------------------|
		// Layer 6 - mPRG =	Programme							|
		// -----------------------------------------------------|


		mac_programme
		{
			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp LG(LS(F1))				// #Hide Prg
				&kp LG(LS(N1))				// 11
				&kp LG(LS(N2))				// 12
				&kp LG(LS(N3))				// 13
				&kp LG(LS(N4))				// 14
				&kp LG(LS(N5))				// 15

				&kp LG(LS(N6))				// 16
				&kp LG(LS(N7))				// 17
				&kp LG(LS(N8))				// 18
				&kp LG(LS(N9))				// 19
				&kp LG(LS(N0))				// 20
				&kp LG(LS(F2))				// #Quit Prg

				// ----------------------------------------

				&mdReset					// -
				&kp LG(LA(N1))				// 1
				&kp LG(LA(N2))				// 2
				&kp LG(LA(N3))				// 3
				&kp LG(LA(N4))				// 4
				&kp LG(LA(N5))				// 5

				&kp LG(LA(N6))				// 6
				&kp LG(LA(N7))				// 7
				&kp LG(LA(N8))				// 8
				&kp LG(LA(N9))				// 9
				&kp LG(LA(N0))				// 0
				&kp LG(LS(F4))				// #Prg Wechsel

				// ----------------------------------------

				&kp LG(LS(F5))			// #Hide All Prg
				&kp LC(LA(N1))			// 21 			
				&kp LC(LA(N2))			// 22
				&kp LC(LA(N3))			// 23
				&kp LC(LA(N4))			// 24
				&kp LC(LA(N5))			// 25
	
				&kp LC(LA(N6))			// 26
				&kp LC(LA(N7))			// 27
				&kp LC(LA(N8))			// 28
				&kp LC(LA(N9))			// 29
				&kp LC(LA(N0))			// 30
				&kp LG(LS(F6))			// #Minimize Prg
		
				// ----------------------------------------

				&none
				&none
				&kp LG(TAB)
				&sl mSPRG					// deep						
				&kp LG(SPACE)
				&none

				// ----------------------------------------

			>;
		};


		// -----------------------------------------------------|
		// Layer 7 - mSPRG =	Spezial Prgramme				|
		// -----------------------------------------------------|


		mac_sprogramme
		{

			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp LG(LS(F7))			// #OPEN
				&kp LA(F1)				//
				&kp LA(F2)				//
				&kp LA(F3)				//
				&kp LA(F4)				//
				&kp LA(F5)				//

				&kp LG(F1)				//
				&kp LG(F2)				//
				&kp LG(F3)				//
				&kp LG(F4)				//
				&kp LG(F5)				//
				&kp LG(LS(F8))			// #OPEN
		
				// ----------------------------------------

				&mdReset
				&kp LA(F6)				//
				&kp LA(F7)				//
				&kp LA(F8)				//
				&kp LA(F9)				//
				&kp LA(F9)				//

				&kp LC(F6)				//
				&kp LC(F7)				//
				&kp LC(F8)				//
				&kp LC(F9)				//
				&kp LC(F10)				//
				&kp LG(LS(F10))			// #OPEN

				// ----------------------------------------

				&kp LG(LS(F11))			// #OPEN			
				&kp LA(F11)				//
				&kp LA(F12)				//
				&kp LA(F13)				//
				&kp LA(F14)				//
				&kp LA(F15)				//

				&kp LG(F11)				//
				&kp LG(F12)				//
				&kp LG(F13)				//
				&kp LG(F14)				//
				&kp LG(F15)				//
				&kp LS(LG(F12))			// #OPEN
		
				// ----------------------------------------

				&none						//
				&none						//
				&none						//
				&trans						// 
				&none						// 
				&none						// 

				// ----------------------------------------

			>;
		};
					


		// -----------------------------------------------------|
		// Layer 8 - mFUNC =	Funktionen						|
		// -----------------------------------------------------|

		mac_function
		{
			label = "MAC";

			bindings = <

				// ----------------------------------------
	
				&kp LG(LS(F13))				
				&kp LC(LA(F1))	
				&kp LC(LA(F2))	
				&kp LC(LA(F3))	
				&kp LC(LA(F4))	
				&kp LC(LA(F5))	

				&kp LS(LA(F1))	
				&kp LS(LA(F2))					
				&kp LS(LA(F3))		
				&kp LS(LA(F4))	
				&kp LS(LA(F5))	
				&kp LG(W)				
				
				// ----------------------------------------

				&mdReset					// -
				&kp LG(A)
				&kp LC(LA(F7))				
				&kp LC(LA(F8))				
				&kp LG(C)			
				&kp LG(X)

				&kp LG(LA(V))
				&kp LG(V)
				&kp LS(LA(F8))				
				&kp LS(LA(F9))	
				&kp LS(LA(F10))	
				&kp ENTER

				// ----------------------------------------

				&kp LSHIFT
				&kp LG(S)
				&kp LG(Y)
				&kp LG(LS(Y))
				&kp LG(O)
				&kp LC(LA(F15))

				&kp LG(P)	
				&kp LS(LA(F11))	
				&kp LG(B)
				&kp LG(I)	
				&kp LG(F)	
				&kp LG(T)
				
				// ----------------------------------------

				&kp LGUI
				&sl mMOD					//
				&sl mSFUNC					// deep
				&none						//
				&none						//
				&none						//

				// ----------------------------------------
			>;
		};



		// -----------------------------------------------------|
		// Layer 9 - mSFUNC =	Spezial Funktionen				|
		// -----------------------------------------------------|

		mac_specialfunction
		{
			label = "MAC";

			bindings = <

			// ----------------------------------------
	
				&kp LA(F16)				
				&kp LG(LA(F1))				// #OPEN
				&kp LG(LA(F2))				// #OPEN
				&kp LG(LA(F3))				// #OPEN
				&kp LG(LA(F4))				// #OPEN
				&kp LG(LA(F5))				// #OPEN

				&kp LS(LA(LC(F1)))			// #OPEN
				&kp LS(LA(LC(F2)))			// #OPEN
				&kp LS(LA(LC(F3)))			// #OPEN
				&kp LS(LA(LC(F4)))			// #OPEN
				&kp LS(LA(LC(F5)))			// #OPEN
				&kp LS(LG(W))
				
				// ----------------------------------------

				&mdReset					// -
				&kp LG(LA(F6))				// @Craft Today
				&kp LG(LA(F7))				// @Craft Tomorrow
				&kp LG(LA(F8))				// #OPEN
				&kp LG(LA(F9))				// #OPEN
				&kp LG(LA(F10))				// @Craft Last Day

				&kp LS(LA(LC(F6)))			// @Craft Today
				&kp LS(LA(LC(F7)))			// @Craft Tomorrow
				&kp LS(LA(LC(F8)))			// #OPEN
				&kp LS(LA(LC(F9)))			// #OPEN
				&kp LS(LA(LC(F10)))			// @Craft Last Day
				&kp LG(ENTER)	

				// ----------------------------------------

				&kp LA(F19)	
				&kp LG(LA(F11))				// @Craft Einkauf
				&kp LG(LA(F12))				// #OPEN
				&kp LG(LA(F13))				// #OPEN
				&kp LG(LA(F14))				// #OPEN
				&kp LG(LA(F15))				// #OPEN

				&kp LS(LA(LC(F11)))			// @Craft Einkauf
				&kp LS(LA(LC(F12)))			// #OPEN
				&kp LS(LA(LC(F13)))			// #OPEN
				&kp LG(F18)					// #OPEN Different
				&kp LG(F19)					// #OPEN Different
				&kp LS(LG(T))
				
				// ----------------------------------------

				&kp LCTRL					//
				&sl mMOD					//
				&trans						// nav
				&none						//
				&none						//
				&none						//

				// ----------------------------------------       
			>;
		};



		// -----------------------------------------------------|
		// Layer 10 - mSYM =	Symoble							|
		// -----------------------------------------------------|

		mac_symbole
		{
			label = "MAC";

			bindings = <

				// ----------------------------------------
				
				&kp LG(LC(SPACE))   	// @Sonderzeichen
				&kp LS(N3)				// §
				&kp GRAVE				// ^
				&kp GRAVE				// ^
				&kp LA(L)				// @
				&kp GRAVE				// ^
				
				&kp LS(NUHS)			// '
				&kp LA(E)				// €
				&kp LS(DOT)				// .
				&kp LS(COMMA)			// ,
				&kp LS(N5)				// %
				&kp BACKSPACE			// -

				// ----------------------------------------

				&mdReset				// 
				&kp LS(N6)				// &
				&kp LA(N8)				// Geschweift
				&kp LA(N9)				// Geschweift
				&kp NUHS				// #
				&kp LS(GRAVE)			// Grad

				&kp LS(N2)				// "
				&kp LS(N1)				// !
				&kp LS(N8)				// Runde
				&kp LS(N9)				// Runde
				&kp LS(MINUS)			// ?
				&kp ENTER

				// ----------------------------------------

				&kp DELETE				//
				&kp LS(N7)				// /
				&kp NUBS				// Spitze
				&kp LS(NUBS)			// Spitze
				&kp LS(RBKT)			// *
				&kp LS(SLASH)			// _

				&kp LS(N0)				// =
				&kp RBKT  				// +
				&kp COMMA				// ,
				&kp DOT					// .
				&kp SLASH 				// -
				&kp LA(M)				// µ
		
				// ----------------------------------------

				&sl mSSYM				// deep
				&none 					//
				&none					// 
				&none					//
				&none					//
				&none					//

				// ----------------------------------------
			>;
		};



		// -----------------------------------------------------|
		// Layer 11 - mSSYM =	Special Symbole					|
		// -----------------------------------------------------|

		mac_specialsonderzeichen
		{
			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp LG(LC(SPACE))   	// @Sonderzeichen
				&trans					//
				&kp RA(NUBS)			// 
				&trans					//
				&trans					//
				&trans					//

				&trans					//
				&kp LS(N4) 				// $
				&trans					//
				&trans					//
				&trans					//
				&kp BACKSPACE			// 

				// ----------------------------------------

				&mdReset				// 
				&trans					//
				&trans					//
				&trans					//
				&trans					//
				&trans					//

				&trans					//
				&trans					//
				&kp LA(N5)				// Eckige
				&kp LA(N6)				// Eckige
				&trans					//
				&kp ENTER

				// ----------------------------------------

				&kp DELETE
				&kp LS(LA(N7))			// \
				&kp RA(N8)
				&kp RA(N9)
				&trans
				&trans					//

				&kp LA(N)				// ~
				&trans
				&kp LS(COMMA)			// ;
				&kp LS(DOT)				// :
				&kp LS(SLASH)			// _
				&trans

				// ----------------------------------------

				&trans					//
				&none					//
				&none					// 
				&none					//
				&none					// 
				&none					//

				// ----------------------------------------
			>;
		};	




		// -----------------------------------------------------|
		// Layer 12 - mMOD =	GUI								|
		// -----------------------------------------------------|

		mac_mod
		{
			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp LG(ESC)					// 
				&kp LG(J)					//
				&kp LG(D)					//
				&kp LG(U)					//
				&kp LG(A)					//
				&kp LG(X)					//

				&kp LG(P)					//
				&kp LG(H)					//
				&kp LG(L) 					//
				&kp LG(M)					//
				&kp LG(W) 					//
				&kp LG(BACKSPACE)			//

				// ----------------------------------------
		
				&mdReset					//
				&kp LG(C)					//
				&kp LG(T)					//
				&kp LG(I)					//
				&kp LG(E)					//
				&kp LG(O)					//

				&kp LG(B)					//
				&kp LG(N)					//
				&kp LG(R)					//
				&kp LG(S)					//
				&kp LG(G)					//
				&kp LG(ENTER)				// 

				// ----------------------------------------

				&kp LSHIFT
				&kp LG(F)					//
				&kp LG(V)					//
				&kp LG(MINUS)				//
				&kp LG(Y)					//
				&kp LG(Q)					//

				&kp LG(Z)					//
				&kp LG(SEMICOLON)			//
				&kp LG(LEFT_BRACKET)		//
				&kp LG(SINGLE_QUOTE)		//
				&kp LG(K) 					//
				&kp LSHIFT

				// ----------------------------------------
		
				&none						//
				&kp LG(SPACE)				// 
				&trans						// 
				&none						//
				&none						//
				&none						// 

				// ----------------------------------------
			>;
		};



		// -----------------------------------------------------|
		// Layer 13 - SChar = 	  Buchstaben Shift				|
		// -----------------------------------------------------|

		mac_schar
		{
			label = "MAC";

			bindings = <

				// ----------------------------------------

				&kp LS(ESC)
				&kp LS(J) 
				&kp LS(D)	 
				&kp LS(U)
				&kp LS(A)
				&kp LS(X)

				&kp LS(P)
				&kp LS(H)
				&kp LS(L)
				&kp LS(M)
				&kp LS(W)
				&kp LS(BSPC)
	
				// ----------------------------------------

				&mdReset
				&kp LS(C)
				&kp LS(T)
				&kp LS(I)
				&kp LS(E)
				&kp LS(O)

				&kp LS(B)
				&kp LS(N)
				&kp LS(R)
				&kp LS(S)
				&kp LS(G)
				&kp LS(RET)
	
				// ----------------------------------------

				&mdLs
				&kp LS(F)
				&kp LS(V)
				&kp LS(MINUS)
				&kp LS(Y)
				&kp LS(Q)

				&kp LS(Z)
				&kp LS(SEMI)
				&kp LS(LBKT)
				&kp LS(SQT)
				&kp LS(K)
				&mdRs		

				// ----------------------------------------		

				&none						// 
				&kp LS(SPACE)				//
				&none						// 
				&none						//
				&none						// 
				&none						//

				// ----------------------------------------

			>;		
		};


		
	};
};

