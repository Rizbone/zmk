
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define mCHAR 0
#define mNR 1

#define mLCHAR 2
#define mSCHAR 3

#define mNAV 4
#define mNAV2 5

#define mPRG 6
#define mSPRG 7

#define mFUNC 8
#define mSFUNC 9

#define mSYM 10
#define mSSYM 11

#define mMOD 12
#define mSMOD 13			

 
/ {
    chosen {
    	zmk,matrix_transform = &default_transform;
    };
};


/ {

    behaviors {

        mdNr: tap_dance_mdNr {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mdNr";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl mNR>, <&sl mSYM>;
        };
		mdLs: tap_dance_mdLs {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mdLs";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl mSCHAR>, <&to mLCHAR>;
        };
		mdRs: tap_dance_mdRs {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_mdRs";
            #binding-cells = <0>;
            tapping-term-ms = <1000>;
            bindings = <&sl mSCHAR>, <&to mLCHAR>;
        };

    };

	
    macros {
        mdLsReset: mdLsReset {
            label = "mdLsReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to 0>
                , <&mdLs>
                ;
    	};
		mdRsReset: mdRsReset {
            label = "mdRsReset";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to 0>
                , <&mdRs>
                ;
    	};
		mdNrHold: mdNrHold {
            label = "mdNrHold";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&to 1>
                , <&sl mNr>
				, <&to 1>
                ;
    	};
	};

	
	
	


	keymap
	{	
		compatible = "zmk,keymap";

		// --------------------------------------
		// Layer 0 - mChar = 	  Buchstaben	
		// --------------------------------------
	
		mac_buchstaben
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp J 
				&kp D	 
				&kp U
				&kp A
				&kp X
				&kp P
				&kp H
				&kp L
				&kp M
				&kp W
				&kp BSPC
	
				&to mCHAR
				&kp C
				&kp T
				&kp I
				&kp E
				&kp O
				&kp B
				&kp N
				&kp R
				&kp S
				&kp G
				&kp RET
	
				&mdLs
				&kp F
				&kp V
				&kp MINUS
				&kp Y
				&kp Q
				&kp Z
				&kp SEMI
				&kp LBKT
				&kp SQT
				&kp K
				&mdRs

				&sl mFUNC
				&kp SPACE
				&sl mNAV
				&sl mPRG
				&mdNr
				&sl mMOD
			>;
		};



		// --------------------------------------
		// Layer 1 - mNR = 	  Zahlen	
		// --------------------------------------

		mac_zahlen
		{
			label = "MAC";

			bindings = <

				&kp ESC	
				&kp LS(NUHS)
				&kp NUBS
				&kp LS(NUBS)			
				&kp LS(N2)
				&kp X
				&kp LS(N4)
				&kp LA(E)
				&kp LA(M)
				&kp M
				&kp LS(N5)			
				&kp BSPC

				&to mCHAR
				&kp N1				
				&kp N2				
				&kp N3				
				&kp N4					
				&kp N5				
				&kp N6				
				&kp N7				
				&kp N8				
				&kp N9				
				&kp N0				
				&kp ENTER 

				&mdLsReset
				&kp LS(N7)
				&kp LS(N8)
				&kp LS(N9)
				&kp LS(RBRC)
				&kp LS(N0)
				&kp LS(DOT)
				&kp RBKT
				&kp COMMA
				&kp DOT
				&kp SLASH		
				&mdRsReset
		
				&sl mFUNC
				&kp SPACE 
				&sl mNAV
				&sl mPRG
				&mdNrHold
				&sl mMOD
			>;		
		};




		// --------------------------------------
		// Layer 2 - mLCHAR = 	  Buchstaben Lock	
		// --------------------------------------
	
		mac_lchar
		{
			label = "MAC";

			bindings = <

				&kp ESC
				&kp LS(J) 
				&kp LS(D)	 
				&kp LS(U)
				&kp LS(A)
				&kp LS(X)
				&kp LS(P)
				&kp LS(H)
				&kp LS(L)
				&kp LS(M)
				&kp LS(W)
				&kp LS(BSPC)
	
				&to mCHAR
				&kp LS(C)
				&kp LS(T)
				&kp LS(I)
				&kp LS(E)
				&kp LS(O)
				&kp LS(B)
				&kp LS(N)
				&kp LS(R)
				&kp LS(S)
				&kp LS(G)
				&kp LS(RET)
	
				&mdLs
				&kp LS(F)
				&kp LS(V)
				&kp LS(MINUS)
				&kp LS(Y)
				&kp LS(Q)
				&kp LS(Z)
				&kp LS(SEMI)
				&kp LS(LBKT)
				&kp LS(SQT)
				&kp LS(K)
				&mdRs						

				&sl mFUNC
				&kp SPACE 
				&sl mNAV
				&sl mPRG
				&mdNr
				&sl mMOD
			>;
		};


		// --------------------------------------
		// Layer 3 - mSChar = 	  Buchstaben Shift
		// --------------------------------------

		mac_schar
		{
			label = "MAC";

			bindings = <

				&kp LS(ESC)
				&kp LS(J) 
				&kp LS(D)	 
				&kp LS(U)
				&kp LS(A)
				&kp LS(X)
				&kp LS(P)
				&kp LS(H)
				&kp LS(L)
				&kp LS(M)
				&kp LS(W)
				&kp LS(BSPC)
	
				&to mCHAR
				&kp LS(C)
				&kp LS(T)
				&kp LS(I)
				&kp LS(E)
				&kp LS(O)
				&kp LS(B)
				&kp LS(N)
				&kp LS(R)
				&kp LS(S)
				&kp LS(G)
				&kp LS(RET)
	
				&mdLs
				&kp LS(F)
				&kp LS(V)
				&kp LS(MINUS)
				&kp LS(Y)
				&kp LS(Q)
				&kp LS(Z)
				&kp LS(SEMI)
				&kp LS(LBKT)
				&kp LS(SQT)
				&kp LS(K)
				&mdRs						

				&trans
				&kp LS(SPACE)
				&trans
				&trans
				&mdNr
				&trans

			>;		
		};


		// --------------------------------------
		// Layer = 4 - mNAV - Navigation
		// -------------------------------------

		mac_navigation
		{		
			label = "MAC";

			bindings = <

				&kp ESC						//
				&kp LG(LA(LC(F1)))		  	// #
				&kp LC(LS(TAB))				// Tap Switch
				&kp LC(TAB)		  			// Tab Switch 
				&kp LG(LA(LC(F2)))		  	// #
				&kp LG(LA(LC(F3)))		  	// #Clipboard History
				&kp LG(UP)					// @Home Sprung
				&kp LG(LEFT)				// @Home 
				&kp UP						// @Up
				&kp LG(RIGHT)				// @End  
				&kp PAGE_UP					// @Page Up
				&kp BSPC					// 

				&to mCHAR					// 
				&kp LG(LA(LC(F4)))		  	// #Pfadsuche
				&kp LG(LA(LC(F5)))		  	// #Umbennen F2
				&kp LCTRL					// 
				&kp LSHIFT					// 
				&kp LG(LA(LC(F6)))		  	// #Open
				&kp LG(DOWN)				// @End Sprung
				&kp LEFT 					// @Left
				&kp DOWN					// @Down
				&kp RIGHT 					// @Right
				&kp PG_DN					// @Page Down
				&kp ENTER					// 
				
				&kp LGUI					// 
				&kp LG(LA(LC(F7)))		  	// #Seitenleiste links
				&kp F17						// #Raus
				&kp F18						// #Rein
				&kp LG(LA(LC(F10)))		  	// #Seitenleiste rechts
				&kp LG(LA(LC(F11)))		  	// #
				&kp LG(LA(LC(LS(MINUS))))	// #Shortcat
				&kp LS(TAB)					// @Tab
				&kp LA(LEFT)				// @Wort Sprung
				&kp LA(RIGHT)				// @Wort Sprung
				&kp TAB						// @Tab
				&kp DEL						//

				&none
				&kp LG(LA(LC(F12)))		  	// #
				&sl mNAV2					// 
				&trans
				&trans
				&trans										
			>;
		};

		// ---------------------------------------------------------
		// Layer = 5 - mNAV2 - Navigation deep
		// ---------------------------------------------------------

		mac_navigation2
		{		
			label = "MAC";

			bindings = <

				&kp ESC						// 
				&kp LG(LA(LS(F2)))			// window move
				&kp LG(LA(LS(F3)))			// window move
				&kp LG(LA(LS(F4)))			// window move
				&kp LG(LA(LS(F1)))			// window move
				&trans						//
				&kp LG(LA(LC(F8)))		  	// #
				&kp LG(LA(LS(F14)))			// window snap Quater
				&kp LG(LC(UP))				// Window snap
				&kp LG(LA(LS(F15)))			// window snap Quater
				&kp LG(LA(LS(F13)))			// window snap fill
				&kp BSPC

				&to mCHAR					// 
				&kp LG(LA(LS(F6)))			// window move
				&kp LG(LA(LS(F7)))			// window move
				&kp LG(LA(LS(F8)))			// window move
				&kp LG(LA(LS(F5)))			// window move
				&trans						//
				&kp LG(LA(LC(F9)))			// #
				&kp LG(LC(LEFT))			// Window snap
				&kp LG(LC(DOWN))			// Window snap
				&kp LG(LC(RIGHT))			// Window snap
				&kp LG(LA(LS(F16)))			// window snap fill
				&kp ENTER				
	
				&trans						//
				&trans						//
				&kp LS(F17)					// #deep Rein
				&kp LS(F18)					// #deep Raus
				&trans						//
				&trans						//
				&trans						//
				&trans						//
				&trans						//
				&trans						//
				&trans						// 
				&trans						//

				&none
				&trans
				&trans
				&trans
				&trans
				&trans
			>;
		};




		// --------------------------------------
		// Layer 6 - mPRG =	Programme
		// --------------------------------------


		mac_programme
		{
			label = "MAC";

			bindings = <

				&kp LG(LA(LC(LS(F1))))		// open
				&kp LG(LA(LS(N1)))
				&kp LG(LA(LS(N2)))
				&kp LG(LA(LS(N3)))
				&kp LG(LA(LS(N4)))
				&kp LG(LA(LS(N5)))
				&kp LG(LA(LS(N6)))
				&kp LG(LA(LS(N7)))
				&kp LG(LA(LS(N8)))
				&kp LG(LA(LS(N9)))
				&kp LG(LA(LS(N0)))
				&kp LG(LA(LC(LS(F2))))		// quit

				&to mCHAR
				&kp LG(LA(N1))
				&kp LG(LA(N2))
				&kp LG(LA(N3))
				&kp LG(LA(N4))
				&kp LG(LA(N5))
				&kp LG(LA(N6))
				&kp LG(LA(N7))
				&kp LG(LA(N8))
				&kp LG(LA(N9))
				&kp LG(LA(N0))
				&kp LG(LA(LC(LS(F3))))		// open

				&kp LG(LA(LC(LS(F4))))		// open
				&kp LG(LA(LC(LS(N1)))) 			
				&kp LG(LA(LC(LS(N2))))
				&kp LG(LA(LC(LS(N3))))
				&kp LG(LA(LC(LS(N4))))
				&kp LG(LA(LC(LS(N5))))
				&kp LG(LA(LC(LS(N6))))
				&kp LG(LA(LC(LS(N7))))
				&kp LG(LA(LC(LS(N8))))
				&kp LG(LA(LC(LS(N9))))
				&kp LG(LA(LC(LS(N0))))
				&kp LG(LA(LC(LS(F5))))		// open
		
				&none
				&none
				&kp LG(SPACE)
				&sl mSPRG
				&to mNR
				&none
			>;
		};


		// --------------------------------------
		// Layer 7 - mSPRG =	Spezial Prgramme
		// --------------------------------------


		mac_sprogramme
		{

			label = "MAC";

			bindings = <

				&kp LG(LA(LC(LS(F6))))		// open
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LG(LA(LC(LS(F7))))		// open
		
				&to mCHAR
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LG(LA(LC(LS(F8))))		// open

				&kp LG(LA(LC(LS(F9))))		// open				
				&kp LG(N1)
				&kp LG(N2)
				&kp LG(N3)
				&kp LG(N4)
				&kp LG(N5)
				&kp LG(N6)
				&kp LG(N7)
				&kp LG(N8)
				&kp LG(N9)
				&kp LG(N0)
				&kp LG(LA(LC(LS(F10))))		// open
		
				&none
				&none
				&kp LG(LA(LC(SPACE)))	 	 // Maestro Spotlight
				&trans
				&none
				&none
			>;
		};



		// --------------------------------------
		// Layer 8 - mFUNC =	Funktionen
		// --------------------------------------

		mac_function
		{
			label = "MAC";

			bindings = <
	
				&kp LG(LA(LC(LS(F11))))		// open
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LC(N6)					// Craft Format 
				&kp LC(N5)					// Craft Format 
				&kp LC(N4)					// Craft Format 
				&kp LC(N3)					// Craft Format 
				&kp LG(KP_PLUS)				// Plus
				&kp LG(LA(LC(LS(F12))))		// open
				
				&to mCHAR
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LG(I)					// Craft Format
				&kp LG(B) 					// Craft Format
				&kp LG(LS(NUHS))			// Craft Format (Focus)
				&kp LG(LS(EQUAL))			// Craft Format (Block)
				&kp LG(KP_MINUS)			// Plus
				&kp LG(LA(LC(LS(F13))))		// open


				&kp LG(LA(LC(LS(F14))))		// open
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LG(U) 					// Craft Format 
				&kp LG(LS(B))				// Craft Format (Marker)
				&kp LG(LS(C))				// Craft Format (Code)
				&kp LG(LS(SLASH))			// Craft Format (Durch)
				&kp LG(LS(P))				// Craft Format (Seite)
				&kp LG(LA(LC(LS(F15))))		// shift Del
				
				&sl mSFUNC
				&none
				&none
				&none
				&none
				&none
			>;
		};


		// --------------------------------------
		// Layer 9 - mSFUNC =	Spezial Funktionen
		// --------------------------------------

		mac_specialfunction
		{
			label = "MAC";

			bindings = <

				&kp LG(LA(LC(LS(F16))))		// open
				&kp LG(LA(LC(KP_PLUS)))		// drehen
				&bt BT_PRV
				&bt BT_SEL 0
				&bt BT_NXT
				&bt BT_CLR
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LG(LA(LC(LS(F17))))		// open	

				&to mCHAR
				&kp LG(LA(LC(KP_MINUS)))		// drehen
				&kp C_PREVIOUS 		
				&kp C_PP 
				&kp C_NEXT 
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LG(LA(LC(LS(F18))))		// open
				
				&kp LG(LA(LC(LS(F19))))		// open
				&kp LG(LC(LA(NUHS)))   		// Screenshot
				&kp C_VOLUME_DOWN 
				&kp C_MUTE
				&kp C_VOLUME_UP 
				&none
				&trans
				&trans
				&trans
				&trans
				&trans
				&trans
				&kp LG(LA(LC(LS(F20))))		// open
		
				&trans
				&none
				&none
				&none
				&none
				&none            
			>;
		};



		// --------------------------------------
		// Layer 10 - mSYM =	Symoble
		// --------------------------------------

		mac_symbole
		{
			label = "MAC";

			bindings = <
				
				&kp LG(LC(SPACE))   	// Sonderzeichen
				&kp LS(NUHS)			// '
				&kp NUBS				// <
				&kp LS(NUBS)			// 
				&kp LS(N2)				// "
				&kp X					// x
				&kp LS(N4) 				// $
				&kp LA(E)				// €
				&kp LA(M)				// µ
				&kp M					// m
				&kp LS(N5)				// %
				&kp BACKSPACE			// back

				&to mCHAR				// reset
				&kp NUHS				// #
				&kp LA(N)				// ~
				&kp GRAVE				// ^
				&kp LA(L)				// @
				&kp LS(N6)				// &
				&kp LS(COMMA)			// ;
				&kp LS(N1)				// !
				&kp LS(N3)				// §
				&kp LS(SLASH)			// _
				&kp LS(MINUS)			// ?
				&kp LA(N7)				// |

				&kp EQUAL				//
				&kp LS(N7)				// /
				&kp LS(N8)				// 
				&kp LS(N9)				// 
				&kp LS(RBRC)			// *
				&kp LS(N0)				// =
				&kp LS(DOT)				// :
				&kp RBKT				// +
				&kp COMMA				// ,
				&kp DOT					// .
				&kp SLASH				// -
				&kp GRAVE				// ^
		
				&trans 
				&kp SPACE
				&trans
				&trans
				&sl mSSYM
				&trans
			>;
		};



		// --------------------------------------
		// Layer 11 - mSSYM =	Special Symbole
		// --------------------------------------

		mac_specialsonderzeichen
		{
			label = "MAC";

			bindings = <

				&kp LG(LC(SPACE))   	// Sonderzeichen
				&kp LS(NUHS)			// '
				&kp LA(N5)				// 
				&kp LA(N6)				// 
				&kp LS(N2)				// "
				&kp X					// x
				&kp LS(N4) 				// $
				&kp LA(E)				// €
				&kp LA(M)				// µ
				&kp M					// m
				&kp LS(N5)				// %
				&kp BACKSPACE			// back

				&to mCHAR				// 
				&kp NUHS				// #				
				&kp LA(N)				// ~
				&kp GRAVE				// ^
				&kp LA(L)				// @
				&kp LS(N6)				// &
				&kp LS(COMMA)			// ;
				&kp LS(N1)				// !
				&kp LS(N3)				// §
				&kp LS(SLASH)			// _
				&kp LS(MINUS)			// ?
				&kp LA(N7)				// |

				&kp LS(EQUAL)			//
				&kp LS(LA(N7))			// 
				&kp LA(N8)				// 
				&kp LA(N9)				// 
				&kp LS(RBRC)			// *
				&kp LS(N0)				// =
				&kp LS(DOT)				// :
				&kp RBKT				// +
				&kp COMMA				// ,
				&kp DOT					// .
				&kp SLASH				// -
				&kp GRAVE				// ^

				&none
				&kp SPACE
				&none
				&none
				&trans
				&none
			>;
		};	




		// --------------------------------------
		// Layer 12 - mMOD =	GUI
		// --------------------------------------

		mac_mod
		{
			label = "MAC";

			bindings = <

				&kp LA(DELETE)				// Wort entfernen
				&kp LG(J)
				&kp LG(D)
				&kp LG(U)
				&kp LG(A)
				&kp LG(X)
				&kp LG(P)
				&kp LG(H)
				&kp LG(L) 
				&kp LG(M)
				&kp LG(W) 
				&kp LA(BACKSPACE)			// Wort enfternen
		
				&to mCHAR
				&kp LG(C)
				&kp LG(T)
				&kp LG(I)
				&kp LG(E)
				&kp LG(O)	
				&kp LG(B)
				&kp LG(N)
				&kp LG(R)
				&kp LG(S)
				&kp LG(G)
				&kp LG(ENTER)				// Enter Mod	

				&kp LG(Y)					// Zurück
				&kp LG(F)
				&kp LG(V)
				&kp LG(MINUS)
				&kp LG(Y)
				&kp LG(Q)
				&kp LG(Z)
				&kp LG(SEMICOLON)
				&kp LG(LEFT_BRACKET)
				&kp LG(SINGLE_QUOTE)
				&kp LG(K) 
				&kp LS(LG(Y))				// Wiederholen
		
				&none
				&kp LG(SPACE)
				&none
				&none
				&none
				&sl mSMOD
			>;
		};



		// --------------------------------------
		// Layer 13 - mSMOD =	Spezial GUI
		// --------------------------------------

		mac_smod
		{	
			label = "MAC";

			bindings = <
			
				&kp LG(DELETE)				// Zeile entfernen 
				&kp LG(LS(J))
				&kp LG(LS(D))
				&kp LG(LS(U))
				&kp LG(LS(A))
				&kp LG(LS(X))
				&kp LG(LS(P))
				&kp LG(LS(H)) 
				&kp LG(LS(L)) 
				&kp LG(LS(M))
				&kp LG(LS(W))
				&kp LG(BACKSPACE)			// Zeile enfternen
		
				&to mCHAR
				&kp LG(LS(C))
				&kp LG(LS(T))
				&kp LG(LS(I))
				&kp LG(LS(E))
				&kp LG(LS(O))
				&kp LG(LS(B))
				&kp LG(LS(N))
				&kp LG(LS(R))
				&kp LG(LS(S))
				&kp LG(LS(G))
				&kp LA(LG(ENTER))			// Enter Mod

				&none
				&kp LG(LS(F))
				&kp LG(LS(V))
				&kp LG(LS(MINUS))
				&kp LG(LS(Y))
				&kp LG(LS(Q))
				&kp LG(LS(Z))
				&kp LG(LS(SEMICOLON))
				&kp LG(LS(LEFT_BRACKET))
				&kp LG(LS(SINGLE_QUOTE))
				&kp LG(LS(K))
				&none

				&none
				&none
				&none
				&none
				&none
				&trans
			>;
		};

	};
};
